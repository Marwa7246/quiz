{"version":3,"sources":["Version1.js","Version2.js","Version3.js","App.js","reportWebVitals.js","index.js"],"names":["Version1","initialState","score","currentQuestion","showScore","classSubmit","useState","state","setState","console","log","questions","questionText","answerOptions","answerText","isCorrect","resetClass","className","length","map","answerOption","index","onClick","newScore","nextQuestion","handleOnClick","Version2","classReveal","classNext","classFace","disabled","dataFinal","data","ele","incorrect","e","correct","Version3","randomArray","reset","setReset","useEffect","arr","num","Math","floor","random","indexOf","push","randomArrayNumbers","array","sort","question","App","version","setVersion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c40a0ae4.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport './App.css';\n\nfunction Version1() {\n\n  const initialState = { \n    score: 0,\n    currentQuestion: 0,\n    showScore: false,\n    classSubmit: 'hide',\n    }\n\n  const [state, setState] = useState(initialState);\n  console.log(state);\n\n  const questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n  ];\n  \n  const handleOnClick = (answerOption, index) => {      \n    console.log(index, answerOption.isCorrect);\n      const newScore = state.score + 1;\n      const nextQuestion = state.currentQuestion + 1;\n\n      if (nextQuestion < questions.length && answerOption.isCorrect) {\n        setState({...state,  currentQuestion: nextQuestion, score: newScore, classSubmit: \"correct\"});          \n      } else if (nextQuestion < questions.length && !answerOption.isCorrect) { \n        setState({...state,  currentQuestion: nextQuestion, classSubmit: \"incorrect\"}); \n      } else if (nextQuestion >= questions.length && answerOption.isCorrect) {\n        setState({...state, score: newScore, classSubmit: \"correct\", showScore: true});           \n      } else {\n        setState({...state, classSubmit: \"incorrect\", showScore: true});           \n      }  \n  }\n\n  const handleReset = ()=> {\n    setState(initialState)\n  }\n\n  const resetClass = state.currentQuestion ? \"reset\" : \"hide\";\n  \n  \n\n  return (\n    <div>\n\n    <h1>Version 1</h1>\n\n\t\t<div className='app'>\n\n\t\t\t{state.showScore ? (\n\t\t\t\t<div className='score-section'>You scored {state.score} out of {questions.length}</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {state.currentQuestion+1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n            <div className='question-text'>{questions[state.currentQuestion].questionText}</div>\n\n            <div className=\"answer-section\">{questions[state.currentQuestion].answerOptions.map((answerOption, index)=> {\n              return <button className=\"answer-option\"\n                  key={index} \n                  onClick={()=>handleOnClick(answerOption, index)}    \n                  >\n                    {answerOption.answerText}\n                    </button>})}\n\n            </div>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n      <button className={state.classSubmit} >{state.classSubmit}</button>\n      <button className={resetClass} onClick={handleReset} >RESET</button>\n\n    </div>\n    \n\n\t);\n}\n\nexport default Version1;\n","import React, {useState} from 'react';\n\nimport './App.css';\n\nfunction Version2() {\n\n  const initialState = { \n    score: 0,\n    currentQuestion: 0,\n    showScore: false,\n\t\tclassSubmit: 'hide',\n\t\tclassReveal: '',\n\t\tclassNext: true,\n\t\tclassFace: ''\n\t\t}\n\n  const [state, setState] = useState(initialState);\n\tconsole.log(state);\t\t\n\n\n  const questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n  ];\n  \n  const handleOnClick = (answerOption, index) => {      \n    console.log(index, answerOption.isCorrect);\n\t\tconst newScore = state.score + 1;\n\t\t\n   \tif (answerOption.isCorrect) {\n      setState({...state,  score: newScore, classSubmit: \"correct\", classFace: \"fas fa-smile\", classNext: false, classReveal: 'show-answer'});                 \n    } else {\n      setState({...state, classSubmit: \"incorrect\", classFace: \"fas fa-frown\", classNext: false, classReveal: 'show-answer'});           \n    }  \n  }\n\n  const handleReset = ()=> {\n    setState(initialState)\n\t}\n\tconst handleNext = () => {\n\t\tconst nextQuestion = state.currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n      setState({...state,  currentQuestion: nextQuestion, classSubmit: \"hide\", classNext: true, classReveal: ''});          \n    } else {\n      setState({...state, showScore: true, classNext: true, });           \n    }  \n\t}\n\n  const resetClass = state.currentQuestion || !state.classNext? false : true;\n\n\n\treturn (\n  <div>\n\n    <h1>Version 2</h1>\n\n\t\t<div className='app'>\n\n\t\t\t{state.showScore ? (\n\t\t\t\t<div className='score-section'>You scored {state.score} out of {questions.length}</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {state.currentQuestion+1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n            <div className='question-text'>{questions[state.currentQuestion].questionText}\n\t\t\t\t\t\t<button className={state.classSubmit} disabled>{state.classSubmit}! <i className={state.classFace}></i></button>\n\n\t\t\t\t\t\t</div>\n\n            <div className=\"answer-section\">{questions[state.currentQuestion].answerOptions.map((answerOption, index)=> {\n              return <button className={answerOption.isCorrect  && state.classReveal}\n                  key={index} \n\t\t\t\t\t\t\t\t\tonClick={()=>handleOnClick(answerOption, index)} \n\t\t\t\t\t\t\t\t\tdisabled={!state.classNext}   \n                  >\n                    {answerOption.answerText}\n                    </button>})}\n\n            </div>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t\t<div className='app'>\n\n      <button className='reset' onClick={handleReset} disabled={resetClass}>RESET</button>\n\t\t\t<button className='next' onClick={handleNext} disabled={state.classNext}>NEXT</button>\n\t\t</div>\n\n\n  </div>\n    \n\n\t);\n}\n\nexport default Version2;\n","import React, {useState, useEffect} from 'react';\n\nimport './App.css';\nimport data from './Data.json'\n\nconst dataIncorrectAdded = data.map(ele => { \n\treturn ({...ele, answerOptions: ele.incorrect.map(e=> {\n\t\treturn ({answerText: e, isCorrect: false})})})\n})\n\nconst dataFinal = dataIncorrectAdded.map(ele=> {\n\treturn ({ ...ele, answerOptions: [...ele.answerOptions, {answerText: ele.correct, isCorrect:true}]})\n})\n\nconsole.log(dataFinal)\n\nfunction Version3() {\n\n\tconsole.log(data)\n\n  const initialState = { \n    score: 0,\n    currentQuestion: 0,\n    showScore: false,\n\t\tclassSubmit: 'hide',\n\t\tclassReveal: '',\n\t\tclassNext: true,\n\t\tclassFace: '',\n\t\trandomArray: [],\n\t\t}\n\n\n\n\tconst [state, setState] = useState(initialState);\n\tconst [reset, setReset] = useState(0)\n\tconsole.log(state);\t\n\t\n/* eslint-disable */\n\tuseEffect ( () => {\n\t\tfunction randomArrayNumbers() {\n\t\t\tconst arr =[];\n\t\t\twhile (arr.length < 10) {\n\t\t\t\tconst num = Math.floor(Math.random() * 21);\n\t\t\t\tif (arr.indexOf(num) === -1) {\n\t\t\t\t\tarr.push(num);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\tconst arr = randomArrayNumbers();\n\t\tfunction shuffle(array) {\n\t\t\treturn array.sort(() => Math.random() - 0.5);\n\t\t}  \n\t\tdataFinal.map((ele)=>{\n\t\t\treturn ({...ele, incorrect: shuffle(ele.answerOptions)})\n\t\t});\t\t\n\n\t\t\tsetState({...state, randomArray: arr});\n\t}, [reset]);\n\t\n\t/* eslint-enable */\n\n\tconsole.log(data[0])\n\n\n\n\n\n\n  \n  const handleOnClick = (answerOption, index) => {      \n    // console.log(index, answerOption.isCorrect);\n\t\tconst newScore = state.score + 1;\n\t\t\n   \tif (answerOption.isCorrect) {\n      setState({...state,  score: newScore, classSubmit: \"correct\", classFace: \"fas fa-smile\", classNext: false, classReveal: 'show-answer'});                 \n    } else {\n      setState({...state, classSubmit: \"incorrect\", classFace: \"fas fa-frown\", classNext: false, classReveal: 'show-answer'});           \n    }  \n  }\n\n  const handleReset = ()=> {\n\t\tconst newReset = reset+1;\n\t\tsetReset(newReset);\n    setState(initialState);\n\t}\n\tconst handleNext = () => {\n\t\tconst nextQuestion = state.currentQuestion + 1;\n\t\tif (nextQuestion < state.randomArray.length) {\n      setState({...state,  currentQuestion: nextQuestion, classSubmit: \"hide\", classNext: true, classReveal: ''});          \n    } else {\n      setState({...state, showScore: true, classNext: true, });           \n    }  \n\t}\n\n  return (\n  <div>\n\n    <h1>Version 3</h1>\n\n\t\t<div className='app'>\n\n\t\t\t{state.showScore ? (\n\t\t\t\t<div className='score-section'>You scored {state.score} out of {state.randomArray.length}</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {state.currentQuestion+1}</span>/{state.randomArray.length}\n\t\t\t\t\t\t</div>\n            <div className='question-text'>{state.randomArray.length && dataFinal[state.randomArray[state.currentQuestion]].question}\n\t\t\t\t\t\t<button className={state.classSubmit} disabled>{state.classSubmit}! <i className={state.classFace}></i></button>\n\n\t\t\t\t\t\t</div>\n\n            <div className=\"answer-section\">{state.randomArray.length && dataFinal[state.randomArray[state.currentQuestion]].answerOptions.map((answerOption, index)=> {\n              return <button className={answerOption.isCorrect  && state.classReveal}\n                  key={index} \n\t\t\t\t\t\t\t\t\tonClick={()=>handleOnClick(answerOption, index)} \n\t\t\t\t\t\t\t\t\tdisabled={!state.classNext}   \n                  >\n                    {answerOption.answerText}\n                    </button>})}\n\n            </div>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t\t<div className='app'>\n\n      <button className='reset' onClick={handleReset} disabled={false}>RESET</button>\n\t\t\t<button className='next' onClick={handleNext} disabled={state.classNext}>NEXT</button>\n\t\t</div>\n\n\n  </div>\n    \n\n\t);\n}\n\nexport default Version3;\n","import React, {useState} from 'react';\n\nimport Version1 from './Version1'\n\nimport Version2 from './Version2'\nimport Version3 from './Version3'\n\nimport './App.css';\n\nfunction App() {\n\nconst [version, setVersion] =useState('');\n\n  return (\n    <div>\n\n    <h1>Quiz App</h1>\n\n\t\t<div className='app'>\n      <button className=\"version-selection\" onClick={()=> setVersion(\"version1\")} >Version 1</button>\n\n      <button  className=\"version-selection\"  onClick={()=> setVersion(\"version2\")} >Version 2</button>\t\t\n      <button  className=\"version-selection\"  onClick={()=> setVersion(\"version3\")} >Version 3</button>\t\t\n\n      </div>\n\n      {version === \"version1\" && <Version1/>}\n      {version === \"version2\" && <Version2/>}\n      {version === \"version3\" && <Version3/>}\n\n\n\n\n    </div>\n    \n\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}